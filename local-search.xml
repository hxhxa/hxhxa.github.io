<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>关于毕设出现的问题汇总</title>
    <link href="/2021/04/29/%E5%85%B3%E4%BA%8E%E6%AF%95%E8%AE%BE%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    <url>/2021/04/29/%E5%85%B3%E4%BA%8E%E6%AF%95%E8%AE%BE%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/</url>
    
    <content type="html"><![CDATA[<p>..</p><p>1.</p><p>在pom文件报错，此时需要增加spring boot的版本号</p><p><img src="/.com//myblog\source_posts\关于毕设出现的问题汇总\1.png"></p><p>插入版本号后解决该问题</p><p><img src="/.com//myblog\source_posts\关于毕设出现的问题汇总\2.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>关于写毕设的磨洋工之流水账</title>
    <link href="/2021/04/27/%E5%85%B3%E4%BA%8E%E5%86%99%E6%AF%95%E8%AE%BE%E7%9A%84%E7%A3%A8%E6%B4%8B%E5%B7%A5%E4%B9%8B%E6%B5%81%E6%B0%B4%E8%B4%A6/"/>
    <url>/2021/04/27/%E5%85%B3%E4%BA%8E%E5%86%99%E6%AF%95%E8%AE%BE%E7%9A%84%E7%A3%A8%E6%B4%8B%E5%B7%A5%E4%B9%8B%E6%B5%81%E6%B0%B4%E8%B4%A6/</url>
    
    <content type="html"><![CDATA[<h1 id="2021-4-27"><a href="#2021-4-27" class="headerlink" title="2021.4.27"></a>2021.4.27</h1><h2 id="15：55"><a href="#15：55" class="headerlink" title="15：55"></a>15：55</h2><p>打开电脑，打开网易云音乐，打开毕业设计论文要求，打开wps</p><h2 id="16：00"><a href="#16：00" class="headerlink" title="16：00"></a>16：00</h2><p>打开chrome，研究是用在线画图好用还是用typora画图好用</p><h2 id="16：30"><a href="#16：30" class="headerlink" title="16：30"></a>16：30</h2><p>打开参考的项目，发呆，研究别人是咋做的</p><h2 id="16：48"><a href="#16：48" class="headerlink" title="16：48"></a>16：48</h2><p>开始打开开题报告，通过开题报告复制到论文</p><h2 id="17：52"><a href="#17：52" class="headerlink" title="17：52"></a>17：52</h2><p>顺利将开题报告的部分搞到论文那里，没有修改格式，大概有五千字，但是都是专业名词解释之类的，可能查重会全部标红</p><p><img src="/.com//myblog\source_posts\关于写毕设的磨洋工之流水账\1.png"></p><h1 id="2021-4-28"><a href="#2021-4-28" class="headerlink" title="2021.4.28"></a>2021.4.28</h1><h2 id="14：34"><a href="#14：34" class="headerlink" title="14：34"></a>14：34</h2><p>坐在电脑跟前，耳机没电了，充耳机的时候顺带耍会儿手机</p><h2 id="15：54"><a href="#15：54" class="headerlink" title="15：54"></a>15：54</h2><p>买了个耳机，重新坐下</p><p>发现创建新项目没有spring选项，通过百度解决了问题</p><h2 id="15：57"><a href="#15：57" class="headerlink" title="15：57"></a>15：57</h2><p>继续新建一个项目，弄清楚了现在将spring基本都转到了spring initializr这一个选项中</p><h2 id="16：00-1"><a href="#16：00-1" class="headerlink" title="16：00"></a>16：00</h2><p>下载一个可视化mysql</p><h2 id="16：25"><a href="#16：25" class="headerlink" title="16：25"></a>16：25</h2><p>找到了破解版，正在下载，不知道能不能成功</p><p>发现电脑没有解压软件。。。。。。。。。。。</p><h2 id="16：37"><a href="#16：37" class="headerlink" title="16：37"></a>16：37</h2><p>好了，破解版已经安装完了，开始下一步的磨洋工。</p><h2 id="16：42"><a href="#16：42" class="headerlink" title="16：42"></a>16：42</h2><p>找了一个手把手spring boot项目，打算从头来过。</p><p>距离提交还有七天左右</p><p>哇哦</p><h1 id="2021-4-29"><a href="#2021-4-29" class="headerlink" title="2021.4.29"></a>2021.4.29</h1><h2 id="23：00"><a href="#23：00" class="headerlink" title="23：00"></a>23：00</h2><p>打开了电脑</p><h2 id="23：51"><a href="#23：51" class="headerlink" title="23：51"></a>23：51</h2><p>想起来以前有个前端，不知道还能不能用</p>]]></content>
    
    
    <categories>
      
      <category>odds and ends</category>
      
    </categories>
    
    
    <tags>
      
      <tag>杂七杂八</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于Maven</title>
    <link href="/2021/04/17/%E5%85%B3%E4%BA%8EMaven/"/>
    <url>/2021/04/17/%E5%85%B3%E4%BA%8EMaven/</url>
    
    <content type="html"><![CDATA[<p>1.属于项目管理</p>]]></content>
    
    
    <categories>
      
      <category>back-end</category>
      
    </categories>
    
    
    <tags>
      
      <tag>一些工具的使用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>maven的配置及使用</title>
    <link href="/2021/04/16/maven%E7%9A%84%E9%85%8D%E7%BD%AE%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    <url>/2021/04/16/maven%E7%9A%84%E9%85%8D%E7%BD%AE%E5%8F%8A%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="一、安装maven"><a href="#一、安装maven" class="headerlink" title="一、安装maven"></a>一、安装maven</h1><h2 id="1-在官网中下载maven"><a href="#1-在官网中下载maven" class="headerlink" title="1.在官网中下载maven"></a>1.在官网中下载maven</h2><p><a href="http://maven.apache.org/download.cgi">http://maven.apache.org/download.cgi</a></p><p>选择<img src="/.com//myblog\source_posts\maven的配置及使用\img\1.jpg">进行安装</p><h2 id="2-将下载好的文件进行解压缩，记住下载地址"><a href="#2-将下载好的文件进行解压缩，记住下载地址" class="headerlink" title="2.将下载好的文件进行解压缩，记住下载地址"></a>2.将下载好的文件进行解压缩，记住下载地址</h2><p>需要解压到一个非中文无空格的目录下。</p><h2 id="3-配置变量环境"><a href="#3-配置变量环境" class="headerlink" title="3.配置变量环境"></a>3.配置变量环境</h2><p>在系统环境中添加MAVEN_HOME变量，地址为解压缩地址（是打开解压缩文件的那个地址）</p><p><img src="/.com//myblog\source_posts\maven的配置及使用\img\2.png"></p><p>在系统环境中找到path，在里边新加%MAVEN_HOME%\bin</p><p><img src="/.com//myblog\source_posts\maven的配置及使用\img\1618545511(1).png"></p><h2 id="4-检查是否安装成功"><a href="#4-检查是否安装成功" class="headerlink" title="4.检查是否安装成功"></a>4.检查是否安装成功</h2><p>win+R，cmd，输入mvn -v，查看是否安装成功</p><p><img src="/.com//Users\贺昕贺昕贺昕呀\AppData\Roaming\Typora\typora-user-images\image-20210416160250361.png" alt="image-20210416160250361"></p><h1 id="二、配置本地仓库和阿里云镜像"><a href="#二、配置本地仓库和阿里云镜像" class="headerlink" title="二、配置本地仓库和阿里云镜像"></a>二、配置本地仓库和阿里云镜像</h1><h2 id="1-配置本地仓库"><a href="#1-配置本地仓库" class="headerlink" title="1.配置本地仓库"></a>1.配置本地仓库</h2><h3 id="1）为什么要配置本地仓库"><a href="#1）为什么要配置本地仓库" class="headerlink" title="1）为什么要配置本地仓库"></a>1）为什么要配置本地仓库</h3><p>maven的核心程序并不包含具体功能，仅负责宏观调度。具体功能由插件来完成。maven的核心程序会到本地仓库中查找插件。如果本地仓库中没有就会从远程仓库下载。此时如果不能上网则无法执行maven的具体功能。为了解决这个问题，我们可以将maven的本地仓库指向一个在联网情况下下载好的目录。</p><h3 id="2）目录"><a href="#2）目录" class="headerlink" title="2）目录"></a>2）目录</h3><p>maven默认的本地仓库：~.m2\repository目录</p><p>~当前用户的主目录</p><h3 id="3）修改仓库为本地地址"><a href="#3）修改仓库为本地地址" class="headerlink" title="3）修改仓库为本地地址"></a>3）修改仓库为本地地址</h3><p>打开D:\maven\apache-maven-3.8.1-bin\apache-maven-3.8.1\conf（即maven所下载的目录），选择settings.xml</p><p>找到第一块注释下边的本地仓库，添加新的标签，并输入本地仓库的地址。</p><p><img src="/.com//Users\贺昕贺昕贺昕呀\AppData\Roaming\Typora\typora-user-images\image-20210416161512467.png" alt="image-20210416161512467"></p><h2 id="2-配置阿里云镜像"><a href="#2-配置阿里云镜像" class="headerlink" title="2.配置阿里云镜像"></a>2.配置阿里云镜像</h2><h3 id="1）why"><a href="#1）why" class="headerlink" title="1）why"></a>1）why</h3><p>为了下载jar包方便，</p><h3 id="2）操作"><a href="#2）操作" class="headerlink" title="2）操作"></a>2）操作</h3><p>在maven的核心配置文件setting.xml文件的标签里配置</p><p><img src="/.com//Users\贺昕贺昕贺昕呀\AppData\Roaming\Typora\typora-user-images\image-20210416162110558.png" alt="image-20210416162110558"></p><h1 id="三、在idea中使用maven"><a href="#三、在idea中使用maven" class="headerlink" title="三、在idea中使用maven"></a>三、在idea中使用maven</h1><p>IDEA中自带maven插件，可以使用自带的，也可以使用配置的。</p><h2 id="1-配置maven插件"><a href="#1-配置maven插件" class="headerlink" title="1.配置maven插件"></a>1.配置maven插件</h2><h3 id="1）配置"><a href="#1）配置" class="headerlink" title="1）配置"></a>1）配置</h3><h4 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h4><p>在idea的setting中，找到maven，进行配置，修改配置三处内容。</p><p><img src="/.com//Users\贺昕贺昕贺昕呀\AppData\Roaming\Typora\typora-user-images\image-20210416163546126.png" alt="image-20210416163546126"></p><h4 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h4><p>在maven的下一个菜单有importing菜单</p><p>里边有一个import maven projects automatically这个选项需要画勾，我的idea里边没有这一个选项</p><p>配置完成，就是使用本地的仓库了</p><h3 id="2）idea自带的maven在idea的安装目录的plugins目录中"><a href="#2）idea自带的maven在idea的安装目录的plugins目录中" class="headerlink" title="2）idea自带的maven在idea的安装目录的plugins目录中"></a>2）idea自带的maven在idea的安装目录的plugins目录中</h3><p>找到idea自带的maven文件，和上述步骤一样，进行配置</p><p>D:\IntelliJ IDEA 2020.3.1\plugins\maven\lib\maven3</p><h2 id="2-在idea中创建maven项目"><a href="#2-在idea中创建maven项目" class="headerlink" title="2.在idea中创建maven项目"></a>2.在idea中创建maven项目</h2><p>选择创建module—–maven———1.8——不勾选</p><p><img src="/.com//Users\贺昕贺昕贺昕呀\AppData\Roaming\Typora\typora-user-images\image-20210416165036131.png" alt="image-20210416165036131"></p><p><img src="/.com//Users\贺昕贺昕贺昕呀\AppData\Roaming\Typora\typora-user-images\image-20210416165414379.png" alt="image-20210416165414379"></p>]]></content>
    
    
    <categories>
      
      <category>back-end</category>
      
    </categories>
    
    
    <tags>
      
      <tag>一些工具的使用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于hexo博客的优化</title>
    <link href="/2021/04/03/%E5%85%B3%E4%BA%8Ehexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%BC%98%E5%8C%96/"/>
    <url>/2021/04/03/%E5%85%B3%E4%BA%8Ehexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%BC%98%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h1 id="一、关于添加鼠标特效（关于swig渲染）"><a href="#一、关于添加鼠标特效（关于swig渲染）" class="headerlink" title="一、关于添加鼠标特效（关于swig渲染）"></a>一、关于添加鼠标特效（关于swig渲染）</h1><h2 id="一）网址"><a href="#一）网址" class="headerlink" title="一）网址"></a>一）网址</h2><p><a href="https://blog.csdn.net/qq_42889280/article/details/103087564%EF%BC%88%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E7%89%B9%E6%95%88%E8%BF%99%E4%B8%AA%E6%9C%89%E5%9B%9B%E7%A7%8D%E7%89%B9%E6%95%88%EF%BC%8C%E7%9C%8B%E7%9D%80%E6%8C%BA%E4%B9%96%E7%9A%84%EF%BC%89">https://blog.csdn.net/qq_42889280/article/details/103087564（鼠标点击特效这个有四种特效，看着挺乖的）</a></p><p><a href="https://blog.csdn.net/yu826103408/article/details/106617947%EF%BC%88%E9%BC%A0%E6%A0%87%E7%A7%BB%E5%8A%A8%E7%89%B9%E6%95%88%EF%BC%89">https://blog.csdn.net/yu826103408/article/details/106617947（鼠标移动特效）</a></p><h2 id="二）步骤"><a href="#二）步骤" class="headerlink" title="二）步骤"></a>二）步骤</h2><h3 id="1-配置"><a href="#1-配置" class="headerlink" title="1.配置"></a>1.配置</h3><p>在主题 <code>_config.yml</code> 中添加动态配置项</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">cursor_effect:</span><br><span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">type:</span> <span class="hljs-string">love</span>  <span class="hljs-comment"># fireworks：礼花 | explosion：爆炸 | love：浮出爱心 | text：浮出文字</span><br></code></pre></td></tr></table></figure><p>在 主题/layout/_layout.swig 中引入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs BASH">&#123;% include <span class="hljs-string">&#x27;_custom/custom.swig&#x27;</span> %&#125;<br></code></pre></td></tr></table></figure><h3 id="2-添加代码"><a href="#2-添加代码" class="headerlink" title="2.添加代码"></a>2.添加代码</h3><p>/themes/主题/layout/_custom/custom.swig ，添加如下代码：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">if</span></span> theme.cursor_effect %&#125;</span><br><span class="xml">  </span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">if</span></span> theme.cursor_effect.type == &quot;fireworks&quot; %&#125;</span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/js/cursor/fireworks.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="xml">  </span><span class="hljs-template-tag">&#123;% <span class="hljs-name">elseif</span> theme.cursor_effect.type == &quot;explosion&quot; %&#125;</span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fireworks&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot;</span> &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/js/cursor/explosion.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="xml">  </span><span class="hljs-template-tag">&#123;% <span class="hljs-name">elseif</span> theme.cursor_effect.type == &quot;love&quot; %&#125;</span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/js/cursor/love.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="xml">  </span><span class="hljs-template-tag">&#123;% <span class="hljs-name">elseif</span> theme.cursor_effect.type == &quot;text&quot; %&#125;</span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/js/cursor/text.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="xml">  </span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">endif</span></span> %&#125;</span><br><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">endif</span></span> %&#125;</span><br></code></pre></td></tr></table></figure><h3 id="3-插入js文件"><a href="#3-插入js文件" class="headerlink" title="3.插入js文件"></a>3.插入js文件</h3><p>插入到 /themes/主题/source/js/cursor/ 下</p><h4 id="1）fireworks-js"><a href="#1）fireworks-js" class="headerlink" title="1）fireworks.js"></a>1）fireworks.js</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Circle</span> </span>&#123;<br>  <span class="hljs-keyword">constructor</span>(&#123; origin, speed, color, angle, context &#125;) &#123;<br>    <span class="hljs-keyword">this</span>.origin = origin<br>    <span class="hljs-keyword">this</span>.position = &#123; ...<span class="hljs-keyword">this</span>.origin &#125;<br>    <span class="hljs-keyword">this</span>.color = color<br>    <span class="hljs-keyword">this</span>.speed = speed<br>    <span class="hljs-keyword">this</span>.angle = angle<br>    <span class="hljs-keyword">this</span>.context = context<br>    <span class="hljs-keyword">this</span>.renderCount = <span class="hljs-number">0</span><br>  &#125;<br><br>  draw() &#123;<br>    <span class="hljs-keyword">this</span>.context.fillStyle = <span class="hljs-keyword">this</span>.color<br>    <span class="hljs-keyword">this</span>.context.beginPath()<br>    <span class="hljs-keyword">this</span>.context.arc(<span class="hljs-keyword">this</span>.position.x, <span class="hljs-keyword">this</span>.position.y, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, Math.PI * <span class="hljs-number">2</span>)<br>    <span class="hljs-keyword">this</span>.context.fill()<br>  &#125;<br><br>  move() &#123;<br>    <span class="hljs-keyword">this</span>.position.x = (Math.sin(<span class="hljs-keyword">this</span>.angle) * <span class="hljs-keyword">this</span>.speed) + <span class="hljs-keyword">this</span>.position.x<br>    <span class="hljs-keyword">this</span>.position.y = (Math.cos(<span class="hljs-keyword">this</span>.angle) * <span class="hljs-keyword">this</span>.speed) + <span class="hljs-keyword">this</span>.position.y + (<span class="hljs-keyword">this</span>.renderCount * <span class="hljs-number">0.3</span>)<br>    <span class="hljs-keyword">this</span>.renderCount++<br>  &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Boom</span> </span>&#123;<br>  <span class="hljs-keyword">constructor</span> (&#123; origin, context, circleCount = <span class="hljs-number">16</span>, area &#125;) &#123;<br>    <span class="hljs-keyword">this</span>.origin = origin<br>    <span class="hljs-keyword">this</span>.context = context<br>    <span class="hljs-keyword">this</span>.circleCount = circleCount<br>    <span class="hljs-keyword">this</span>.area = area<br>    <span class="hljs-keyword">this</span>.stop = <span class="hljs-literal">false</span><br>    <span class="hljs-keyword">this</span>.circles = []<br>  &#125;<br><br>  randomArray(range) &#123;<br>    <span class="hljs-keyword">const</span> length = range.length<br>    <span class="hljs-keyword">const</span> randomIndex = Math.floor(length * Math.random())<br>    <span class="hljs-keyword">return</span> range[randomIndex]<br>  &#125;<br><br>  randomColor() &#123;<br>    <span class="hljs-keyword">const</span> range = [<span class="hljs-string">&#x27;8&#x27;</span>, <span class="hljs-string">&#x27;9&#x27;</span>, <span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-string">&#x27;C&#x27;</span>, <span class="hljs-string">&#x27;D&#x27;</span>, <span class="hljs-string">&#x27;E&#x27;</span>, <span class="hljs-string">&#x27;F&#x27;</span>]<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;#&#x27;</span> + <span class="hljs-keyword">this</span>.randomArray(range) + <span class="hljs-keyword">this</span>.randomArray(range) + <span class="hljs-keyword">this</span>.randomArray(range) + <span class="hljs-keyword">this</span>.randomArray(range) + <span class="hljs-keyword">this</span>.randomArray(range) + <span class="hljs-keyword">this</span>.randomArray(range)<br>  &#125;<br><br>  randomRange(start, end) &#123;<br>    <span class="hljs-keyword">return</span> (end - start) * Math.random() + start<br>  &#125;<br><br>  <span class="hljs-keyword">init</span>() &#123;<br>    <span class="hljs-keyword">for</span>(let i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-keyword">this</span>.circleCount; i++) &#123;<br>      <span class="hljs-keyword">const</span> circle = new Circle(&#123;<br>        context: <span class="hljs-keyword">this</span>.context,<br>        origin: <span class="hljs-keyword">this</span>.origin,<br>        color: <span class="hljs-keyword">this</span>.randomColor(),<br>        angle: <span class="hljs-keyword">this</span>.randomRange(Math.PI - <span class="hljs-number">1</span>, Math.PI + <span class="hljs-number">1</span>),<br>        speed: <span class="hljs-keyword">this</span>.randomRange(<span class="hljs-number">1</span>, <span class="hljs-number">6</span>)<br>      &#125;)<br>      <span class="hljs-keyword">this</span>.circles.push(circle)<br>    &#125;<br>  &#125;<br><br>  move() &#123;<br>    <span class="hljs-keyword">this</span>.circles.forEach((circle, index) =&gt; &#123;<br>      <span class="hljs-keyword">if</span> (circle.position.x &gt; <span class="hljs-keyword">this</span>.area.width || circle.position.y &gt; <span class="hljs-keyword">this</span>.area.height) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.circles.splice(index, <span class="hljs-number">1</span>)<br>      &#125;<br>      circle.move()<br>    &#125;)<br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.circles.length == <span class="hljs-number">0</span>) &#123;<br>      <span class="hljs-keyword">this</span>.stop = <span class="hljs-literal">true</span><br>    &#125;<br>  &#125;<br><br>  draw() &#123;<br>    <span class="hljs-keyword">this</span>.circles.forEach(circle =&gt; circle.draw())<br>  &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CursorSpecialEffects</span> </span>&#123;<br>  <span class="hljs-keyword">constructor</span>() &#123;<br>    <span class="hljs-keyword">this</span>.computerCanvas = document.createElement(<span class="hljs-string">&#x27;canvas&#x27;</span>)<br>    <span class="hljs-keyword">this</span>.renderCanvas = document.createElement(<span class="hljs-string">&#x27;canvas&#x27;</span>)<br><br>    <span class="hljs-keyword">this</span>.computerContext = <span class="hljs-keyword">this</span>.computerCanvas.getContext(<span class="hljs-string">&#x27;2d&#x27;</span>)<br>    <span class="hljs-keyword">this</span>.renderContext = <span class="hljs-keyword">this</span>.renderCanvas.getContext(<span class="hljs-string">&#x27;2d&#x27;</span>)<br><br>    <span class="hljs-keyword">this</span>.globalWidth = window.innerWidth<br>    <span class="hljs-keyword">this</span>.globalHeight = window.innerHeight<br><br>    <span class="hljs-keyword">this</span>.booms = []<br>    <span class="hljs-keyword">this</span>.running = <span class="hljs-literal">false</span><br>  &#125;<br><br>  handleMouseDown(e) &#123;<br>    <span class="hljs-keyword">const</span> boom = new Boom(&#123;<br>      origin: &#123; x: e.clientX, y: e.clientY &#125;,<br>      context: <span class="hljs-keyword">this</span>.computerContext,<br>      area: &#123;<br>        width: <span class="hljs-keyword">this</span>.globalWidth,<br>        height: <span class="hljs-keyword">this</span>.globalHeight<br>      &#125;<br>    &#125;)<br>    boom.<span class="hljs-keyword">init</span>()<br>    <span class="hljs-keyword">this</span>.booms.push(boom)<br>    <span class="hljs-keyword">this</span>.running || <span class="hljs-keyword">this</span>.run()<br>  &#125;<br><br>  handlePageHide() &#123;<br>    <span class="hljs-keyword">this</span>.booms = []<br>    <span class="hljs-keyword">this</span>.running = <span class="hljs-literal">false</span><br>  &#125;<br><br>  <span class="hljs-keyword">init</span>() &#123;<br>    <span class="hljs-keyword">const</span> style = <span class="hljs-keyword">this</span>.renderCanvas.style<br>    style.position = <span class="hljs-string">&#x27;fixed&#x27;</span><br>    style.top = style.left = <span class="hljs-number">0</span><br>    style.zIndex = <span class="hljs-string">&#x27;999999999999999999999999999999999999999999&#x27;</span><br>    style.pointerEvents = <span class="hljs-string">&#x27;none&#x27;</span><br><br>    style.width = <span class="hljs-keyword">this</span>.renderCanvas.width = <span class="hljs-keyword">this</span>.computerCanvas.width = <span class="hljs-keyword">this</span>.globalWidth<br>    style.height = <span class="hljs-keyword">this</span>.renderCanvas.height = <span class="hljs-keyword">this</span>.computerCanvas.height = <span class="hljs-keyword">this</span>.globalHeight<br><br>    document.body.append(<span class="hljs-keyword">this</span>.renderCanvas)<br><br>    window.addEventListener(<span class="hljs-string">&#x27;mousedown&#x27;</span>, <span class="hljs-keyword">this</span>.handleMouseDown.bind(<span class="hljs-keyword">this</span>))<br>    window.addEventListener(<span class="hljs-string">&#x27;pagehide&#x27;</span>, <span class="hljs-keyword">this</span>.handlePageHide.bind(<span class="hljs-keyword">this</span>))<br>  &#125;<br><br>  run() &#123;<br>    <span class="hljs-keyword">this</span>.running = <span class="hljs-literal">true</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.booms.length == <span class="hljs-number">0</span>) &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.running = <span class="hljs-literal">false</span><br>    &#125;<br><br>    requestAnimationFrame(<span class="hljs-keyword">this</span>.run.bind(<span class="hljs-keyword">this</span>))<br><br>    <span class="hljs-keyword">this</span>.computerContext.clearRect(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-keyword">this</span>.globalWidth, <span class="hljs-keyword">this</span>.globalHeight)<br>    <span class="hljs-keyword">this</span>.renderContext.clearRect(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-keyword">this</span>.globalWidth, <span class="hljs-keyword">this</span>.globalHeight)<br><br>    <span class="hljs-keyword">this</span>.booms.forEach((boom, index) =&gt; &#123;<br>      <span class="hljs-keyword">if</span> (boom.stop) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.booms.splice(index, <span class="hljs-number">1</span>)<br>      &#125;<br>      boom.move()<br>      boom.draw()<br>    &#125;)<br>    <span class="hljs-keyword">this</span>.renderContext.drawImage(<span class="hljs-keyword">this</span>.computerCanvas, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-keyword">this</span>.globalWidth, <span class="hljs-keyword">this</span>.globalHeight)<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">const</span> cursorSpecialEffects = new CursorSpecialEffects()<br>cursorSpecialEffects.<span class="hljs-keyword">init</span>()<br><br></code></pre></td></tr></table></figure><h4 id="2-explosion-min-js"><a href="#2-explosion-min-js" class="headerlink" title="2)explosion.min.js"></a>2)explosion.min.js</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-meta">&quot;use strict&quot;</span>;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">updateCoords</span>(<span class="hljs-params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="hljs-number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="hljs-number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setParticuleDirection</span>(<span class="hljs-params">e</span>)</span>&#123;<span class="hljs-keyword">var</span> t=anime.random(<span class="hljs-number">0</span>,<span class="hljs-number">360</span>)*<span class="hljs-built_in">Math</span>.PI/<span class="hljs-number">180</span>,a=anime.random(<span class="hljs-number">50</span>,<span class="hljs-number">180</span>),n=[-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>][anime.random(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>)]*a;<span class="hljs-keyword">return</span>&#123;<span class="hljs-attr">x</span>:e.x+n*<span class="hljs-built_in">Math</span>.cos(t),<span class="hljs-attr">y</span>:e.y+n*<span class="hljs-built_in">Math</span>.sin(t)&#125;&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createParticule</span>(<span class="hljs-params">e,t</span>)</span>&#123;<span class="hljs-keyword">var</span> a=&#123;&#125;;<span class="hljs-keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="hljs-number">0</span>,colors.length-<span class="hljs-number">1</span>)],a.radius=anime.random(<span class="hljs-number">16</span>,<span class="hljs-number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>*<span class="hljs-built_in">Math</span>.PI,!<span class="hljs-number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createCircle</span>(<span class="hljs-params">e,t</span>)</span>&#123;<span class="hljs-keyword">var</span> a=&#123;&#125;;<span class="hljs-keyword">return</span> a.x=e,a.y=t,a.color=<span class="hljs-string">&quot;#F00&quot;</span>,a.radius=<span class="hljs-number">0.1</span>,a.alpha=<span class="hljs-number">0.5</span>,a.lineWidth=<span class="hljs-number">6</span>,a.draw=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>*<span class="hljs-built_in">Math</span>.PI,!<span class="hljs-number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="hljs-number">1</span>&#125;,a&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">renderParticule</span>(<span class="hljs-params">e</span>)</span>&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> t=<span class="hljs-number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">animateParticules</span>(<span class="hljs-params">e,t</span>)</span>&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> a=createCircle(e,t),n=[],i=<span class="hljs-number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class="hljs-attr">targets</span>:n,<span class="hljs-attr">x</span>:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)</span>&#123;<span class="hljs-keyword">return</span> e.endPos.x&#125;,<span class="hljs-attr">y</span>:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)</span>&#123;<span class="hljs-keyword">return</span> e.endPos.y&#125;,<span class="hljs-attr">radius</span>:<span class="hljs-number">0.1</span>,<span class="hljs-attr">duration</span>:anime.random(<span class="hljs-number">1200</span>,<span class="hljs-number">1800</span>),<span class="hljs-attr">easing</span>:<span class="hljs-string">&quot;easeOutExpo&quot;</span>,<span class="hljs-attr">update</span>:renderParticule&#125;).add(&#123;<span class="hljs-attr">targets</span>:a,<span class="hljs-attr">radius</span>:anime.random(<span class="hljs-number">80</span>,<span class="hljs-number">160</span>),<span class="hljs-attr">lineWidth</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">alpha</span>:&#123;<span class="hljs-attr">value</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">easing</span>:<span class="hljs-string">&quot;linear&quot;</span>,<span class="hljs-attr">duration</span>:anime.random(<span class="hljs-number">600</span>,<span class="hljs-number">800</span>)&#125;,<span class="hljs-attr">duration</span>:anime.random(<span class="hljs-number">1200</span>,<span class="hljs-number">1800</span>),<span class="hljs-attr">easing</span>:<span class="hljs-string">&quot;easeOutExpo&quot;</span>,<span class="hljs-attr">update</span>:renderParticule,<span class="hljs-attr">offset</span>:<span class="hljs-number">0</span>&#125;)&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">debounce</span>(<span class="hljs-params">e,t</span>)</span>&#123;<span class="hljs-keyword">var</span> a;<span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">var</span> n=<span class="hljs-built_in">this</span>,i=<span class="hljs-built_in">arguments</span>;<span class="hljs-built_in">clearTimeout</span>(a),a=<span class="hljs-built_in">setTimeout</span>(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="hljs-keyword">var</span> canvasEl=<span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&quot;.fireworks&quot;</span>);<span class="hljs-keyword">if</span>(canvasEl)&#123;<span class="hljs-keyword">var</span> ctx=canvasEl.getContext(<span class="hljs-string">&quot;2d&quot;</span>),numberOfParticules=<span class="hljs-number">30</span>,pointerX=<span class="hljs-number">0</span>,pointerY=<span class="hljs-number">0</span>,tap=<span class="hljs-string">&quot;mousedown&quot;</span>,colors=[<span class="hljs-string">&quot;#FF1461&quot;</span>,<span class="hljs-string">&quot;#18FF92&quot;</span>,<span class="hljs-string">&quot;#5A87FF&quot;</span>,<span class="hljs-string">&quot;#FBF38C&quot;</span>],setCanvasSize=debounce(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;canvasEl.width=<span class="hljs-number">2</span>*<span class="hljs-built_in">window</span>.innerWidth,canvasEl.height=<span class="hljs-number">2</span>*<span class="hljs-built_in">window</span>.innerHeight,canvasEl.style.width=<span class="hljs-built_in">window</span>.innerWidth+<span class="hljs-string">&quot;px&quot;</span>,canvasEl.style.height=<span class="hljs-built_in">window</span>.innerHeight+<span class="hljs-string">&quot;px&quot;</span>,canvasEl.getContext(<span class="hljs-string">&quot;2d&quot;</span>).scale(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>)&#125;,<span class="hljs-number">500</span>),render=anime(&#123;<span class="hljs-attr">duration</span>:<span class="hljs-number">1</span>/<span class="hljs-number">0</span>,<span class="hljs-attr">update</span>:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;ctx.clearRect(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="hljs-built_in">document</span>.addEventListener(tap,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)</span>&#123;<span class="hljs-string">&quot;sidebar&quot;</span>!==e.target.id&amp;&amp;<span class="hljs-string">&quot;toggle-sidebar&quot;</span>!==e.target.id&amp;&amp;<span class="hljs-string">&quot;A&quot;</span>!==e.target.nodeName&amp;&amp;<span class="hljs-string">&quot;IMG&quot;</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="hljs-number">1</span>),setCanvasSize(),<span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&quot;resize&quot;</span>,setCanvasSize,!<span class="hljs-number">1</span>)&#125;<span class="hljs-string">&quot;use strict&quot;</span>;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">updateCoords</span>(<span class="hljs-params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="hljs-number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="hljs-number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setParticuleDirection</span>(<span class="hljs-params">e</span>)</span>&#123;<span class="hljs-keyword">var</span> t=anime.random(<span class="hljs-number">0</span>,<span class="hljs-number">360</span>)*<span class="hljs-built_in">Math</span>.PI/<span class="hljs-number">180</span>,a=anime.random(<span class="hljs-number">50</span>,<span class="hljs-number">180</span>),n=[-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>][anime.random(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>)]*a;<span class="hljs-keyword">return</span>&#123;<span class="hljs-attr">x</span>:e.x+n*<span class="hljs-built_in">Math</span>.cos(t),<span class="hljs-attr">y</span>:e.y+n*<span class="hljs-built_in">Math</span>.sin(t)&#125;&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createParticule</span>(<span class="hljs-params">e,t</span>)</span>&#123;<span class="hljs-keyword">var</span> a=&#123;&#125;;<span class="hljs-keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="hljs-number">0</span>,colors.length-<span class="hljs-number">1</span>)],a.radius=anime.random(<span class="hljs-number">16</span>,<span class="hljs-number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>*<span class="hljs-built_in">Math</span>.PI,!<span class="hljs-number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createCircle</span>(<span class="hljs-params">e,t</span>)</span>&#123;<span class="hljs-keyword">var</span> a=&#123;&#125;;<span class="hljs-keyword">return</span> a.x=e,a.y=t,a.color=<span class="hljs-string">&quot;#F00&quot;</span>,a.radius=<span class="hljs-number">0.1</span>,a.alpha=<span class="hljs-number">0.5</span>,a.lineWidth=<span class="hljs-number">6</span>,a.draw=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>*<span class="hljs-built_in">Math</span>.PI,!<span class="hljs-number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="hljs-number">1</span>&#125;,a&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">renderParticule</span>(<span class="hljs-params">e</span>)</span>&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> t=<span class="hljs-number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">animateParticules</span>(<span class="hljs-params">e,t</span>)</span>&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> a=createCircle(e,t),n=[],i=<span class="hljs-number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class="hljs-attr">targets</span>:n,<span class="hljs-attr">x</span>:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)</span>&#123;<span class="hljs-keyword">return</span> e.endPos.x&#125;,<span class="hljs-attr">y</span>:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)</span>&#123;<span class="hljs-keyword">return</span> e.endPos.y&#125;,<span class="hljs-attr">radius</span>:<span class="hljs-number">0.1</span>,<span class="hljs-attr">duration</span>:anime.random(<span class="hljs-number">1200</span>,<span class="hljs-number">1800</span>),<span class="hljs-attr">easing</span>:<span class="hljs-string">&quot;easeOutExpo&quot;</span>,<span class="hljs-attr">update</span>:renderParticule&#125;).add(&#123;<span class="hljs-attr">targets</span>:a,<span class="hljs-attr">radius</span>:anime.random(<span class="hljs-number">80</span>,<span class="hljs-number">160</span>),<span class="hljs-attr">lineWidth</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">alpha</span>:&#123;<span class="hljs-attr">value</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">easing</span>:<span class="hljs-string">&quot;linear&quot;</span>,<span class="hljs-attr">duration</span>:anime.random(<span class="hljs-number">600</span>,<span class="hljs-number">800</span>)&#125;,<span class="hljs-attr">duration</span>:anime.random(<span class="hljs-number">1200</span>,<span class="hljs-number">1800</span>),<span class="hljs-attr">easing</span>:<span class="hljs-string">&quot;easeOutExpo&quot;</span>,<span class="hljs-attr">update</span>:renderParticule,<span class="hljs-attr">offset</span>:<span class="hljs-number">0</span>&#125;)&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">debounce</span>(<span class="hljs-params">e,t</span>)</span>&#123;<span class="hljs-keyword">var</span> a;<span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">var</span> n=<span class="hljs-built_in">this</span>,i=<span class="hljs-built_in">arguments</span>;<span class="hljs-built_in">clearTimeout</span>(a),a=<span class="hljs-built_in">setTimeout</span>(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="hljs-keyword">var</span> canvasEl=<span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&quot;.fireworks&quot;</span>);<span class="hljs-keyword">if</span>(canvasEl)&#123;<span class="hljs-keyword">var</span> ctx=canvasEl.getContext(<span class="hljs-string">&quot;2d&quot;</span>),numberOfParticules=<span class="hljs-number">30</span>,pointerX=<span class="hljs-number">0</span>,pointerY=<span class="hljs-number">0</span>,tap=<span class="hljs-string">&quot;mousedown&quot;</span>,colors=[<span class="hljs-string">&quot;#FF1461&quot;</span>,<span class="hljs-string">&quot;#18FF92&quot;</span>,<span class="hljs-string">&quot;#5A87FF&quot;</span>,<span class="hljs-string">&quot;#FBF38C&quot;</span>],setCanvasSize=debounce(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;canvasEl.width=<span class="hljs-number">2</span>*<span class="hljs-built_in">window</span>.innerWidth,canvasEl.height=<span class="hljs-number">2</span>*<span class="hljs-built_in">window</span>.innerHeight,canvasEl.style.width=<span class="hljs-built_in">window</span>.innerWidth+<span class="hljs-string">&quot;px&quot;</span>,canvasEl.style.height=<span class="hljs-built_in">window</span>.innerHeight+<span class="hljs-string">&quot;px&quot;</span>,canvasEl.getContext(<span class="hljs-string">&quot;2d&quot;</span>).scale(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>)&#125;,<span class="hljs-number">500</span>),render=anime(&#123;<span class="hljs-attr">duration</span>:<span class="hljs-number">1</span>/<span class="hljs-number">0</span>,<span class="hljs-attr">update</span>:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;ctx.clearRect(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="hljs-built_in">document</span>.addEventListener(tap,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)</span>&#123;<span class="hljs-string">&quot;sidebar&quot;</span>!==e.target.id&amp;&amp;<span class="hljs-string">&quot;toggle-sidebar&quot;</span>!==e.target.id&amp;&amp;<span class="hljs-string">&quot;A&quot;</span>!==e.target.nodeName&amp;&amp;<span class="hljs-string">&quot;IMG&quot;</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="hljs-number">1</span>),setCanvasSize(),<span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&quot;resize&quot;</span>,setCanvasSize,!<span class="hljs-number">1</span>)&#125;;<br><br></code></pre></td></tr></table></figure><h4 id="3）love-min-js"><a href="#3）love-min-js" class="headerlink" title="3）love.min.js"></a>3）love.min.js</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">!<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,a</span>)</span>&#123;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">n</span>(<span class="hljs-params"></span>)</span>&#123;c(<span class="hljs-string">&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;</span>),o(),r()&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">r</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> e=<span class="hljs-number">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class="hljs-number">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class="hljs-number">1</span>)):(d[e].y--,d[e].scale+=<span class="hljs-number">.004</span>,d[e].alpha-=<span class="hljs-number">.013</span>,d[e].el.style.cssText=<span class="hljs-string">&quot;left:&quot;</span>+d[e].x+<span class="hljs-string">&quot;px;top:&quot;</span>+d[e].y+<span class="hljs-string">&quot;px;opacity:&quot;</span>+d[e].alpha+<span class="hljs-string">&quot;;transform:scale(&quot;</span>+d[e].scale+<span class="hljs-string">&quot;,&quot;</span>+d[e].scale+<span class="hljs-string">&quot;) rotate(45deg);background:&quot;</span>+d[e].color+<span class="hljs-string">&quot;;z-index:99999&quot;</span>);requestAnimationFrame(r)&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">o</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">var</span> t=<span class="hljs-string">&quot;function&quot;</span>==<span class="hljs-keyword">typeof</span> e.onclick&amp;&amp;e.onclick;e.οnclick=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)</span>&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">i</span>(<span class="hljs-params">e</span>)</span>&#123;<span class="hljs-keyword">var</span> a=t.createElement(<span class="hljs-string">&quot;div&quot;</span>);a.className=<span class="hljs-string">&quot;heart&quot;</span>,d.push(&#123;<span class="hljs-attr">el</span>:a,<span class="hljs-attr">x</span>:e.clientX-<span class="hljs-number">5</span>,<span class="hljs-attr">y</span>:e.clientY-<span class="hljs-number">5</span>,<span class="hljs-attr">scale</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">alpha</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">color</span>:s()&#125;),t.body.appendChild(a)&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">c</span>(<span class="hljs-params">e</span>)</span>&#123;<span class="hljs-keyword">var</span> a=t.createElement(<span class="hljs-string">&quot;style&quot;</span>);a.type=<span class="hljs-string">&quot;text/css&quot;</span>;<span class="hljs-keyword">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class="hljs-keyword">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="hljs-string">&quot;head&quot;</span>)[<span class="hljs-number">0</span>].appendChild(a)&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">s</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">return</span><span class="hljs-string">&quot;rgb(&quot;</span>+~~(<span class="hljs-number">255</span>*<span class="hljs-built_in">Math</span>.random())+<span class="hljs-string">&quot;,&quot;</span>+~~(<span class="hljs-number">255</span>*<span class="hljs-built_in">Math</span>.random())+<span class="hljs-string">&quot;,&quot;</span>+~~(<span class="hljs-number">255</span>*<span class="hljs-built_in">Math</span>.random())+<span class="hljs-string">&quot;)&quot;</span>&#125;<span class="hljs-keyword">var</span> d=[];e.requestAnimationFrame=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)</span>&#123;<span class="hljs-built_in">setTimeout</span>(e,<span class="hljs-number">1e3</span>/<span class="hljs-number">60</span>)&#125;&#125;(),n()&#125;(<span class="hljs-built_in">window</span>,<span class="hljs-built_in">document</span>);<br><br></code></pre></td></tr></table></figure><h4 id="4）text-js"><a href="#4）text-js" class="headerlink" title="4）text.js"></a>4）text.js</h4><p>这个里边的文字可以随意修改</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-keyword">var</span> a_idx = <span class="hljs-number">0</span>;<br>jQuery(document).ready(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">$</span>) </span>&#123;<br>  $(<span class="hljs-string">&quot;body&quot;</span>).click(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> a = <span class="hljs-keyword">new</span> Array(<span class="hljs-string">&quot;富强&quot;</span>, <span class="hljs-string">&quot;民主&quot;</span>, <span class="hljs-string">&quot;文明&quot;</span>, <span class="hljs-string">&quot;和谐&quot;</span>, <span class="hljs-string">&quot;自由&quot;</span>, <span class="hljs-string">&quot;平等&quot;</span>, <span class="hljs-string">&quot;公正&quot;</span> ,<span class="hljs-string">&quot;法治&quot;</span>, <span class="hljs-string">&quot;爱国&quot;</span>, <span class="hljs-string">&quot;敬业&quot;</span>, <span class="hljs-string">&quot;诚信&quot;</span>, <span class="hljs-string">&quot;友善&quot;</span>);<br>    <span class="hljs-keyword">var</span> <span class="hljs-symbol">$i</span> = $(<span class="hljs-string">&quot;&lt;span/&gt;&quot;</span>).text(a[a_idx]);<br>    <span class="hljs-keyword">var</span> x = e.pageX,<br>      y = e.pageY;<br>    <span class="hljs-symbol">$i</span>.css(&#123;<br>      <span class="hljs-string">&quot;z-index&quot;</span>: <span class="hljs-number">99999</span>,<br>      <span class="hljs-string">&quot;top&quot;</span>: y - <span class="hljs-number">28</span>,<br>      <span class="hljs-string">&quot;left&quot;</span>: x - a[a_idx].length * <span class="hljs-number">8</span>,<br>      <span class="hljs-string">&quot;position&quot;</span>: <span class="hljs-string">&quot;absolute&quot;</span>,<br>      <span class="hljs-string">&quot;color&quot;</span>: <span class="hljs-string">&quot;#ff7a45&quot;</span><br>    &#125;);<br>    $(<span class="hljs-string">&quot;body&quot;</span>).append(<span class="hljs-symbol">$i</span>);<br>    <span class="hljs-symbol">$i</span>.animate(&#123;<br>      <span class="hljs-string">&quot;top&quot;</span>: y - <span class="hljs-number">180</span>,<br>      <span class="hljs-string">&quot;opacity&quot;</span>: <span class="hljs-number">0</span><br>    &#125;, <span class="hljs-number">1500</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>      <span class="hljs-symbol">$i</span>.remove();<br>    &#125;);<br>    a_idx = (a_idx + <span class="hljs-number">1</span>) % a.length;<br>  &#125;);<br>&#125;);<br><br></code></pre></td></tr></table></figure><p>二、添加评论功能</p><p>一）注册</p><p>在来必力网站进行注册，<a href="http://livere.com/">http://livere.com/</a></p><p>注册很方便，有邮箱就可以，选择一般免费的版本就可以。</p><p>二）安装</p><p>选择免费的版本，安装之后，会弹出来一段代码，选择一般网站内一个框。</p><p>三）修改</p><p>在主题所对应的_config.yml .进行修改</p><p>将来必力所对应的uid处插入刚刚代码中data-uid</p><p>四）添加评论的位置</p><p>在需要评论模块的地方加入相应ejs文件里</p><p>比如要在文章里添加，就在post.ejs里添加</p><p>五）部署</p><p>部署完看效果</p>]]></content>
    
    
    <categories>
      
      <category>front-end</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客相关</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo+GitHub搭建个人博客页面</title>
    <link href="/2021/01/12/hexo-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%A1%B5%E9%9D%A2/"/>
    <url>/2021/01/12/hexo-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%A1%B5%E9%9D%A2/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="一、一堆乱七八糟的废话"><a href="#一、一堆乱七八糟的废话" class="headerlink" title="一、一堆乱七八糟的废话"></a>一、一堆乱七八糟的废话</h1><p>关于选择个人博客页面是因为很久之前就在B站上看过好多up主的视频，大多数的标题都是10分钟，20分钟，小白搞定个人博客。反正就是很吸引人，然后19年过年的时候，看到了一名华侨大学学长的个人博客，他当时发表的文章是学爬虫的时候做的笔记。那个时候也尝试弄过一段时间，没搞对，有着这样那样的很多的问题然后就放弃了。今年1月3号回的家，想起来这茬事。</p><p>期间还重装了几次电脑，我的电脑什么时候可以起飞，配环境啥的简直太恐怖了。装的时候很费事，搞清楚顺序还有其中的关系就很快了。</p><p>关于为什么要选择hexo+GitHub进行搭建，也没什么原因，就是因为网上都是这么说的，都说这么搞十分钟就搞好了</p><h1 id="二、安装环境配置等一系列准备"><a href="#二、安装环境配置等一系列准备" class="headerlink" title="二、安装环境配置等一系列准备"></a>二、安装环境配置等一系列准备</h1><p>1.git bash</p><p>2.node.js</p><p>3.hexo</p><h2 id="关于git-bash"><a href="#关于git-bash" class="headerlink" title="关于git bash"></a>关于git bash</h2><p>git bash其实就是相当于自带的cmd，可以直接在某个文件夹里Git Bash Here用了几次之后觉得非常方便。我是在这里下载的</p><p><a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a></p><p>用的Google浏览器，自带的翻译，看不懂就翻译，看不懂就翻译，大部分是看不懂的。</p><h2 id="关于Node-js"><a href="#关于Node-js" class="headerlink" title="关于Node.js"></a>关于Node.js</h2><p>NodeJS是hexo的环境，后续了解到下载这个环境是为了使用npm工具，后续好多都需要npm，瑞斯拜</p><p>下载地址<a href="https://nodejs.org/en/">https://nodejs.org/en/</a></p><p>我下载的是LTS版本的</p><h2 id="关于hexo"><a href="#关于hexo" class="headerlink" title="关于hexo"></a>关于hexo</h2><p>终于到hexo了</p><p>首先，安装npm，win+R打开cmd一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><p>然后，等安装完之后。检查一下node，npm是否安装成功。继续cmd一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">node -v<br>npm -v<br></code></pre></td></tr></table></figure><p>接着，在要存博客的位置新建一个文件夹，我给自己的命名的是myblog，存在了D盘。打开D盘，右击myblog，选择Git Bash Here，会弹出一个类似cmd，但是是彩色的黑色框框。之后在里边输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init    <span class="hljs-comment">#初始化</span><br>npm install<br></code></pre></td></tr></table></figure><p>这样，就算全部安装完成了。</p><h1 id="三、打开最开始的hexo"><a href="#三、打开最开始的hexo" class="headerlink" title="三、打开最开始的hexo"></a>三、打开最开始的hexo</h1><p>上述完成之后，相当于最初的安装已经全部完成。接下来，就是网站的编译发布。还是myblog右击点开Git Bash Here</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo generate<br>hexo server<br></code></pre></td></tr></table></figure><p>上述两步完成之后，在浏览器输入<a href="http://localhost:4000，便可以访问刚刚搞好的hexo首页，这个是原始的那种，不过还是很好看。">http://localhost:4000，便可以访问刚刚搞好的hexo首页，这个是原始的那种，不过还是很好看。</a></p><h1 id="四、部署到GitHub上"><a href="#四、部署到GitHub上" class="headerlink" title="四、部署到GitHub上"></a>四、部署到GitHub上</h1><h2 id="第一步。GitHub注册且建仓库"><a href="#第一步。GitHub注册且建仓库" class="headerlink" title="第一步。GitHub注册且建仓库"></a>第一步。GitHub注册且建仓库</h2><p>需要一个GitHub账号，然后新建一个库，名字就是自己GitHub的名+github.io(我也不知道为什么要这么命名，但是大家都是这么教的，好像是因为后续好通过域名进入)。</p><p>这一步的话，最好看一看自己能不能使用GitHub Pages。（我的就是不能用，全都弄完才发现打不开还以为是电脑坏了，后来才发现是因为我家的路由器的问题。）我是根据CSDN上的文章，修改了DNS服务器的地址，改成了114 .114.114.114,后续就可使用了。可以参照<a href="https://blog.csdn.net/wuufeii/article/details/108151697">https://blog.csdn.net/wuufeii/article/details/108151697</a></p><h2 id="第二步。和GitHub账户相关联"><a href="#第二步。和GitHub账户相关联" class="headerlink" title="第二步。和GitHub账户相关联"></a>第二步。和GitHub账户相关联</h2><p>之后，就是很重要的这个联网，我也不知道我为什么搞了很久。还是右击mylog，Git Bash Here。  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;你的GitHub用户名&quot;</span> <br>git config --global user.email <span class="hljs-string">&quot;你GitHub注册邮箱&quot;</span><br></code></pre></td></tr></table></figure><p>检验是否设置成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --list<br></code></pre></td></tr></table></figure><p>之后改变站点的配置信息，打开myblog文件夹，找到 _config.yml文件，使用笔记本或者vscode等各种编译器打开修改最后的几行，保存退出。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs groovy"><span class="hljs-attr">deploy:</span>  <br><span class="hljs-attr">type:</span> git  <br><span class="hljs-attr">repo:</span> <span class="hljs-attr">https:</span><span class="hljs-comment">//github.com/YourgithubName/YourgithubName.github.io.git  （这个网址是你GitHub仓库的地址，从GitHub中复制黏贴过去）</span><br><span class="hljs-attr">branch:</span> master<br></code></pre></td></tr></table></figure><h2 id="第三步。创建ssh"><a href="#第三步。创建ssh" class="headerlink" title="第三步。创建ssh"></a>第三步。创建ssh</h2><p>创建ssh的目的应该是为了方便后续将文件部署至git，更加方便快捷。</p><p>右击myblog使用Bash，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git init<br>ssh-keygen -t rsa -C <span class="hljs-string">&quot;你自己的邮箱&quot;</span><br></code></pre></td></tr></table></figure><p>我后续都是一直回车的，他有设置用户名密码啥的，我主要是怕密码忘记，就全按默认回车了。有一个方框框的那种图形的显示，就是创建成功了。之后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">~/.ssh<br>ls<br></code></pre></td></tr></table></figure><p>查看。如果显示is adirectory，就是说明文件存在了。根据文件路径找到.ssh，用记事本打开id_rsa.pub，将里边内容全部复制。</p><p>之后添加ssh key到GitHub，在git中打开个人用户那里的settings，里边有个SSH keys，点击new SSH keys。title随便写，key复制刚刚的内容。保存。</p><p>会有一段时间，隔一段时间再bash，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -T git@github.com<br></code></pre></td></tr></table></figure><p>出现问题的时候回复yes，之后有个hi，你自己的用户名，You’ve successfully authenticated, but GitHub does not provide shell access.就表示已经设置成功。</p><h2 id="第四步。安装git的扩展包，就是将hexo部署到git上"><a href="#第四步。安装git的扩展包，就是将hexo部署到git上" class="headerlink" title="第四步。安装git的扩展包，就是将hexo部署到git上"></a>第四步。安装git的扩展包，就是将hexo部署到git上</h2><p>继续Bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><p>安装完成之后，继续bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo d<br></code></pre></td></tr></table></figure><p>如果显示info deploy done：git说明就是部署成功了。如果不成功的话，会给你发邮件页面打不开，很显然邮件内容是全英文的o(TヘTo)。主题是Page build warning。</p><p>成功的话使用用户名.github.io便可以打开，和刚刚本地浏览的一样。</p><h1 id="五、更换域名"><a href="#五、更换域名" class="headerlink" title="五、更换域名"></a>五、更换域名</h1><p>如果想要自己的域名，可以购买一个，之后进行备案就可以用，在git仓库里修改就可以使用了。（今天刚接到阿里小哥哥的电话，我可能快能用到自己掏钱买的域名辽。）</p><h1 id="六、关于怎么用"><a href="#六、关于怎么用" class="headerlink" title="六、关于怎么用"></a>六、关于怎么用</h1><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p>关于怎么用我也没有搞太对，还不了解，昨天更换了一个主题，在别人的git上down下来主题，之后修改一些图片之类的参数，改成自己更加喜欢的样式。我使用的是fluid。这个主题真的巨好用，里边很多样式我都巨喜欢。</p><p>改图片的话，我找了半天，是要在.deploy_git里边进行修改，如果直接改public里边的，一bash就没有了</p><h2 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h2><p>写文章使用的是Markdown语言，也是一种标记语言，不挺简单的，我下载了一个typora，更方便，这篇文章是我的首次尝试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new <span class="hljs-string">&quot;文章名称&quot;</span><br></code></pre></td></tr></table></figure><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>关于每次修改完的更新，一般使用如下三个命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean<span class="hljs-comment">#清除缓存</span><br><br>hexo g<span class="hljs-comment">#编译</span><br><br>hexo d<span class="hljs-comment">#部署到git</span><br><br>hexo s<span class="hljs-comment">#在本地进行服务，可以使用http://localhost:4000/打开。</span><br></code></pre></td></tr></table></figure><p>大概就是这样，然后就是看看我这篇文章能否顺利上传。</p>]]></content>
    
    
    <categories>
      
      <category>front-end</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客相关</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/01/10/hello-world/"/>
    <url>/2021/01/10/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to hexin‘blog! This is your very first post. 这是hexo搭成后的第一个blog，舍不得删除，改一改就这样留着哇。</p><p>hello world</p>]]></content>
    
    
    <categories>
      
      <category>front-end</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客相关</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
